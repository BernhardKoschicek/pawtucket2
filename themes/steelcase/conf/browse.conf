cache_timeout = 0
#
# 
#
browseTypes = {
	objects = {
		displayName = _(Artworks),
		labelSingular = _("artwork"),
 		labelPlural = _("artworks"),
		table = ca_objects,
		
		restrictToTypes = [],
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {},
			list = {},
			timeline = {
				data = ca_objects.creation_date,
				display = {
					title_template = <l>^ca_objects.preferred_labels.name</l> (^ca_objects.idno),
					description_template = <p>^ca_objects.description</p>,
					credit_template = ^ca_objects.rightsStatement.rightsStatement_text,
					caption_template = <em>^ca_objects.caption</em>,
					image = ^ca_object_representations.media.small,
					icon = ^ca_object_representations.media.icon
				}
			}
		},
		sortBy = {
			Identifier = ca_objects.idno,
			Title = ca_object_labels.name
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Identifier = asc,
			Title = desc
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown,
		
		options = {
			extendedInformationTemplate = <ifdef code='ca_objects.creation_date'>, ^ca_objects.creation_date</ifdef><ifcount code='ca_entities' restrictToRelationshipTypes='creator' min='1'><unit relativeTo='ca_entities' restrictToRelationshipTypes='creator'><br/><l>^ca_entities.preferred_labels.name</l> <ifdef code='ca_entities.dob_dod|ca_entities.nationality'>(</ifdef><ifdef code='ca_entities.nationality'>^ca_entities.nationality</ifdef><ifdef code='ca_entities.dob_dod,ca_entities.nationality'>, </ifdef>^ca_entities.dob_dod<ifdef code='ca_entities.dob_dod|ca_entities.nationality'>)</ifdef></unit></ifcount>
		}
	}
}

views = {
	images = {
		icon = glyphicon-th
	},
	list = {
		icon = glyphicon-list
	},
	timeline = {
		icon = glyphicon-time
	},
	map = {
		icon = glyphicon-globe
	}
}

# --- default number of results per page/ajax load
defaultHitsPerBlock = 36

# --- set to list to show dropdown with links to each configured browse or a single Browse nav link when one browse is configured
browse_menu_format = list

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-8 col-md-8 col-lg-8
result_col_class =

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-4 col-md-3 col-md-offset-1 col-lg-3 col-lg-offset-1
refine_col_class =

cache_timeout = 0

# Configuration for object browse
ca_objects = {
	name = _("Objects"),
	facets = {
		type_facet = {
			type = fieldList,
			field = type_id,
			
			group_mode = none,

			label_singular = _("type"),
			label_plural = _("types"),
			description = _("Find objects according to the Types defined in your collection profile."),
		},	
		creator_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_objects_x_entities,
			restrict_to_types = [],
			restrict_to_relationship_types = [creator],
			
			individual_group_display = 1,
			
			groupings = {
				label = _("Name"), 
				relationship_types = _("Role"),
				type = _("Type")
			},
			group_mode = alphabetical,
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _("creator"),
			label_plural = _("creators"),
			description = _("Find objects byt he arist that created the object."),
		},
		decade_facet = {
			type = normalizedDates,
			element_code = creation_date,
			normalization = decades,
			
			group_mode = none,
			
			label_singular = _("decade"),
			label_plural = _("decades"),
			description = _("Find objects according to associated dates.  You can normalize these dates by year&#44; decade or century."),			
		},
		year_facet = {
			type = normalizedDates,
			element_code = creation_date,
			normalization = years,
			
			group_mode = none,
			
			label_singular = _("year"),
			label_plural = _("years"),
			description = _("Find objects according to associated dates.  You can normalize these dates by year&#44; decade or century."),			
		},
		color_facet = {
			type = attribute,
			element_code = colors,
			
			group_mode = none,
			
			label_singular = _("color"),
			label_plural = _("colors"),
			description = _("Find objects by color."),			
		},
		styles_movement_facet = {
			type = attribute,
			element_code = styles_movement,
			
			group_mode = none,
			
			label_singular = _("Style/Movement"),
			label_plural = _("Style/Movement"),
			description = _("Find objects by Style/Movement."),			
		},
		theme_facet = {
			type = attribute,
			element_code = steelcase_themes,
			
			group_mode = hierarchical,
			show_hierarchy = 1,
			
			label_singular = _("Themes"),
			label_plural = _("Themes"),
			description = _("Find objects by theme."),			
		},
		
		
		collection_facet = {
			type = authority,
			table = ca_collections,
			relationship_table = ca_objects_x_collections,
			restrict_to_types = [],
			
			group_mode = none,

			label_singular = _("collection"),
			label_plural = _("collections"),
			description = _("Find objects according to the Collections they belong to."),
		}
	}
}