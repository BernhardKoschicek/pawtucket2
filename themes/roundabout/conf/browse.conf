cache_timeout = 0

#
# 
#

# --- set if you don't want the browse menu to be preloaded with facets for the first browse type on open
dontPreloadBrowseMenu = 0

browseTypes = {
	people = {
		displayName = _(People),
		labelSingular = _("person"),
 		labelPlural = _("people"),
		table = ca_entities,
		
		restrictToTypes = [],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			list = {},
		},
		
		defaultView = list,
		
		sortBy = {
			Identifier = ca_entities.preferred_labels.displayname,
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Identifier = asc,
			Title = desc
		},
		baseCriteria = {
			has_production = [yes],
		}
           
	},
	objects = {
		displayName = _(Objects),
		labelSingular = _("object"),
 		labelPlural = _("objects"),
		table = ca_objects,
		
		restrictToTypes = [],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {
			    representation = ^ca_object_representations.media.large
			},
			list = {
                representation = ^ca_object_representations.media.large
            }
		},
		sortBy = {
			Identifier = ca_objects.idno,
			Title = ca_object_labels.name
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Identifier = asc,
			Title = desc
		}
	},
	occurrences = {
		displayName = _(Productions),
		labelSingular = _("production"),
 		labelPlural = _("productions"),
		table = ca_occurrences,
		
		restrictToTypes = [productions],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {
			     representation = <ifcount code='ca_objects' min='1'><unit relativeTo='ca_objects' length='1'><ifcount code='ca_object_representations' min='1'>^ca_object_representations.media.large%length=1</ifcount></unit></ifcount>,

			},
			list = {
                representation = ^ca_object_representations.media.large
            }
		},
		sortBy = {
			Identifier = ca_objects.idno,
			Title = ca_occurrences.preferred_labels.name
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Identifier = asc,
			Title = desc
		}
	},
	collections = {
		displayName = _(Collections),
		labelSingular = _("collection"),
 		labelPlural = _("collections"),
		table = ca_collections,
		restrictToTypes = [collection],
		dontExpandTypesHierarchically = true,
		
		baseCriteria = {
			findingaid_facet = [yes]
		},
				
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = { 
			images = {
				representation = <ifcount code='ca_objects' min='1'><unit relativeTo='ca_objects' length='1'><ifcount code='ca_object_representations' min='1'>^ca_object_representations.media.large%length=1</ifcount></unit></ifcount>,

			}, 
#			list = {}
		},
		
		sortBy = {
			Name = ca_collection_labels.name,
			Date = ca_collections.inclusive_dates,
		},
		options = {
			selectMediaUsingRelationshipTypes = [findingaid], 
		}
		# --- sortControlType = dropdown or list
		sortControlType = dropdown
	},
}

views = {
	images = {
		icon = <ion-icon name="apps"></ion-icon>
	},
	list = {
		icon = <ion-icon name="ios-list-box"></ion-icon>
	},
	timeline = {
		icon = <ion-icon name="ios-time"></ion-icon>
	},
	map = {
		icon = <ion-icon name="globe"></ion-icon>
	}
}

# --- text for Browse menu item, default is "Browse" 
browse_menu_button_text = 

# --- default number of results per page/ajax load
defaultHitsPerBlock = 36

# --- set to list to show dropdown with links to each configured browse or a single Browse nav link when one browse is configured
browseMenuFormat =

# --- set if you don't want the browse menu to be preloaded with facets for the first browse type on open
dontPreloadBrowseMenu = 1

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-8 col-md-8 col-lg-8
result_col_class =

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-4 col-md-3 col-md-offset-1 col-lg-3 col-lg-offset-1
refine_col_class =

ca_objects = {
	name = _("Objects"),
	facets = {
		type_facet = {
			type = fieldList,
			field = type_id,
			
			group_mode = none,

			label_singular = _("object type"),
			label_plural = _("object types"),
			description = _("Find objects according to the Types defined in your collection profile."),
		},
		document_type_facet = {
			type = attribute,
			element_code = document_type,
			
			group_mode = none,
		
			requires = type_facet,
			label_singular = _("document type"),
			label_plural = _("document types"),
		},
		media_type_facet = {
			type = attribute,
			element_code = media_type,
			
			group_mode = none,
		
			requires = type_facet,
			label_singular = _("media type"),
			label_plural = _("media types"),
		},
		
		year_facet = {
			type = normalizedDates,
			element_code = creation_date,
			normalization = years,
			group_mode = none,
			
			label_singular = _("year"),
			label_plural = _("years"),
		},
		production_facet = {
			type = authority,
			table = ca_occurrences,
			relationship_table = ca_objects_x_occurrences,
			restrict_to_types = [production],
			
			group_mode = none,

			label_singular = _("production"),
			label_plural = _("productions"),
		},

	}
}

ca_entities = {
	name = _("People"),
	facets = {
		role_facet = {
            type = relationship_types,
            table = ca_occurrences,
            relationship_table = ca_entities_x_occurrences,
            restrict_to_relationship_types = [actor, choreography, costume_design, director, Exective Producer, musical_direction, performer, playwright, set_design, stage_manager],

			group_mode = alphabetical,
			order_by_label_fields = [name],
			
            label_singular = _("person type"),
            label_plural = _("person types"),
        },
		production_facet = {
			type = authority,
			table = ca_occurrences,
			relationship_table = ca_entities_x_occurrences,
			restrict_to_types = [production],
			
			group_mode = alphabetical,
			order_by_label_fields = [name],

			label_singular = _("production"),
			label_plural = _("productions"),
		},
		has_production = {
			type = has,
			
			table = ca_occurrences,
			relationship_table = ca_entities_x_occurrences,
			restrict_to_types = [productions],
			restrict_to_relationship_types = [],
			
			label_yes = _("Has productions"),
			label_no = _("Does not have productions"),
			
			single_value = 1,
			
			label_singular = _("has productions"),
			label_plural = _("has productions"),
			requires = x
		}

	}
}

ca_occurrences = {
	name = _("Productions"),
	facets = {
		year_facet = {
			type = normalizedDates,
			element_code = production_date,
			normalization = years,
			group_mode = none,
			
			label_singular = _("year"),
			label_plural = _("years"),
		},
		showtype_facet = {
			type = attribute,
			element_code = classification,
			
			group_mode = alphabetical,
			
			label_singular = _("show type"),
			label_plural = _("show types")
		},
		genre_facet = {
			type = attribute,
			element_code = genre,
			
			group_mode = alphabetical,
			
			label_singular = _("genre"),
			label_plural = _("genres")
		},
		venue_facet = {
			type = attribute,
			element_code = venue_list,
			
			group_mode = alphabetical,
			
			label_singular = _("venue"),
			label_plural = _("venues")
		},	
	}
}
ca_collections = {
	name = _("Collections"),
	facets = {
		decade_facet = {
			type = normalizedDates,
			element_code = inclusive_dates,
			normalization = decades,
			group_mode = none,
			
			label_singular = _("decade"),
			label_plural = _("decades"),
		},
		material_facet = {
			type = attribute,
			element_code = material_types,
			
			group_mode = alphabetical,
			
			label_singular = _("material"),
			label_plural = _("materials")
		},	
	}
}