#
# 
#
cache_timeout = 0

browseTypes = {
	objects = {
		table = ca_objects,
		restrictToTypes = [],
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = [images, list, timeline],
		
		sortBy = {
			Identifier = ca_objects.idno,
			Title = ca_object_labels.name
		},
		
		options = {
			extendedInformationTemplate = <ifcount code='ca_collections' min='1'><div style='float: right;'>Part of: <unit relativeTo='ca_collections'><l>^ca_collections.preferred_labels.name</l></unit></div></ifcount>
		}
	},
	people = {
		table = ca_entities,
		
		# comment this out or leave empty if you don't want to restrict by type
		restrictToTypes = [],
		
		# comment this out or leave empty if you want all available facets presented to the user
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = [list, timeline],
		
		sortBy = {
			Identifier = ca_entities.idno,
			Name = ca_entity_labels.surname;ca_entity_labels.forename
		}
	},
	collections = {
		table = ca_collections,
		restrictToTypes = [],
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = [images, list],
		
		sortBy = { 
			Identifier = ca_collections.idno,
			Name = ca_collection_labels.name
		}
	}
}

#
# Facet definitions
#
ca_objects = {
	name = _("Objects"),
	facets = {
		type_facet = {
			type = fieldList,
			field = type_id,
			
			group_mode = none,

			label_singular = _("object type"),
			label_plural = _("object types"),
			description = _("Find objects according to the Types defined in your collection profile."),
		},	
		entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_objects_x_entities,
			restrict_to_types = [],
			
			individual_group_display = 1,
			
			groupings = {
				label = _("Name"), 
				relationship_types = _("Role"),
				type = _("Type")
			},
			group_mode = alphabetical,
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _("person"),
			label_plural = _("people"),
			description = _("Find objects according to the people associated with your records.  You can browse by name&#44; role&#44; or entity type according to your configuration."),
		},
		term_facet = {
			type = authority,
			table = ca_list_items,
			relationship_table = ca_objects_x_vocabulary_terms,
			restrict_to_types = [],
			
			individual_group_display = 0,
			
			group_mode = alphabetical,
			dont_expand_hierarchically = 1,
			
			# Set to non-zero value to display hierarchy on items in this facet
			show_hierarchy = 1,
			
			# Character(s) to place between elements of the hierarchy
			hierarchical_delimiter =  &nbsp;â¬…&nbsp;,
			
			# Number of items to trim off the top (leave blank or set to 0 to trim nothing)
			remove_first_items = ,
			
			# Maximum length of hierarchy to display (leave blank to return hierarchy unabridged)
			hierarchy_limit = 3,
			
			# can be ASC or DESC (default is DESC)
			hierarchy_order  = DESC,
			
			label_singular = _("term"),
			label_plural = _("terms"),
			description = _("Browse keywords and vocabulary terms you have associated with your records.  You can displays your keywords as a list or hierarchy of terms.")
		},
		century_facet = {
			type = normalizedDates,
			element_code = creation_date,
			normalization = centuries,
			
			group_mode = none,
			
			label_singular = _("century"),
			label_plural = _("centuries"),
			description = _("Find objects according to associated dates.  You can normalize these dates by year&#44; decade or century."),
		},
		decade_facet = {
			type = normalizedDates,
			element_code = creation_date,
			normalization = decades,
			
			group_mode = none,
			
			label_singular = _("decade"),
			label_plural = _("decades"),
			description = _("Find objects according to associated dates.  You can normalize these dates by year&#44; decade or century."),			
		},
		collection_facet = {
			type = authority,
			table = ca_collections,
			relationship_table = ca_objects_x_collections,
			restrict_to_types = [collection],
			dont_include_subtypes = 1,
			
			group_mode = none,

			label_singular = _("collection"),
			label_plural = _("collections"),
			description = _("Find objects according to the Collections they belong to."),
		}
	}
}

ca_entities = {
	name = _("Entities"),
	facets = {
		collections_facet = {
			type = authority,
			table = ca_collections,
			relationship_table = ca_entities_x_collections,
			restrict_to_types = [],
			
			group_mode = alphabetical,
			
			label_singular = _("Collection"),
			label_plural = _("Collections")
		}
	}
}

ca_occurrences = {

}

viewIcons = {
	images = glyphicon-th, 
	list = glyphicon-th-list, 
	timeline = glyphicon-time,
	map = glyphicon-globe
}