browseTypes = {
	objects = {
		table = ca_objects,
		restrictToTypes = [],
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = [images, list],
		
		sortBy = {
			Title = ca_object_labels.name,
			Date = ca_objects.date.dates_value,
		}
	},
	artists = {
		name = People,	
		table = ca_entities,
		
		# comment this out or leave empty if you don't want to restrict by type
		restrictToTypes = [ind],
		
		# comment this out or leave empty if you want all available facets presented to the user
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = [list, images],
		
		sortBy = {
			Name = ca_entity_labels.surname;ca_entity_labels.forename
		}
	},
	exhibitions = {
		name = Exhibitions + Events,
		table = ca_occurrences,
		
		# comment this out or leave empty if you don't want to restrict by type
		restrictToTypes = [exhibition, event],
		
		# comment this out or leave empty if you want all available facets presented to the user
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = [list, images],
		
		sortBy = {
			Title = ca_occurrence_labels.name,
			Date = ca_occurrences.event_dates,
		}
	}
}

ca_entities = {
	name = _("People"),
	facets = {
		#exhibition_facet = {
		#	type = authority,
		#	table = ca_occurrences,
		#	generate_facets_for_types = 0,
		#	relationship_table = ca_entities_x_occurrences,
		#	restrict_to_types = [exhibition],
		#	
		#	group_mode = alphabetical,
		#	
		#	indefinite_article = an,
		#	label_singular = _("Exhibiton"),
		#	label_plural = _("Exhibitions")
		#},
		#work_facet = {
		#	type = authority,
		#	table = ca_collections,
		#	relationship_table = ca_entities_x_collections,
		#	restrict_to_types = [],
		#	
		#	group_mode = alphabetical,
		#	
		#	label_singular = _("Work"),
		#	label_plural = _("Works")
		#},
		technique_facet = {
			type = authority,
			table = ca_list_items,
			relationship_table = ca_entities_x_vocabulary_terms,
			relative_to = ca_collections,
			restrict_to_types = [],
			
			group_mode = alphabetical,
			
			label_singular = _("Technique"),
			label_plural = _("Techniques")
		},		
		nationality_facet = {
			type = attribute,
			element_code = nationality,
			
			group_mode = alphabetical,
			
			label_singular = _("Nationality"),
			label_plural = _("Nationalities")
		},
		#technique_facet = {
		#	type = attribute,
		#	element_code = technique,
		#	relative_to = ca_collections,
		#	
		#	group_mode = alphabetical,
		#	
		#	label_singular = _("Technique"),
		#	label_plural = _("Techniques")
		#},
		gender_facet = {
			type = attribute,
			element_code = gender,
			
			group_mode = alphabetical,
			
			label_singular = _("Gender"),
			label_plural = _("Genders")
		},
	}
}

ca_occurrences = {
	name = _("Exhibitions"),
	facets = {
		type_facet = {
			type = fieldList,
			field = type_id,
			
			group_mode = none,
			
			label_singular = _("Type"),
			label_plural = _("Types")
		},	
		date_facet = {
			type = normalizedDates,
			element_code = event_dates,
			
			normalization = decades,
			group_mode = none,
			
			label_singular = _("Date"),
			label_plural = _("Dates")
		},	
		category_facet = {
			type = attribute,
			element_code = exhibition_category,
			
			group_mode = none,
			
			label_singular = _("Exhibition Type"),
			label_plural = _("Exhibition Types")
		},			
	}
}

ca_objects = {
	name = _("Objects"),
	facets = {
		type_facet = {
			type = fieldList,
			field = type_id,
			
			group_mode = none,
			
			label_singular = _("Type"),
			label_plural = _("Types")
		},	
		date_facet = {
			type = normalizedDates,
			element_code = dates_value,
			
			normalization = decades,
			group_mode = none,
			
			label_singular = _("Date"),
			label_plural = _("Dates")
		},				
	}
}

views = {
	images = {
		icon = glyphicon-th
	},
	list = {
		icon = glyphicon-list
	},
	timeline = {
		icon = glyphicon-time
	},
	map = {
		icon = glyphicon-globe
	}
}