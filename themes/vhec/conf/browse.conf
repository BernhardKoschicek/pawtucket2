cache_timeout = 0

#
# 
#
browseTypes = {
	museum = {
		displayName = _(Objects),
		labelSingular = _("object"),
 		labelPlural = _("objects"),
		table = ca_objects,
		
		restrictToTypes = [work],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		facetGroup = museum,
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {},
			list = {},
			map = {
				data = ca_places.georeference,
				display = {
#					title_template = <l>^ca_objects.preferred_labels</l>,
					description_template = <div class='mapPin'><div class='mapImage'>^ca_object_representations.media.small</div><p><l>^ca_objects.preferred_labels</l></p><p>^ca_objects.description</p></div>,
					caption_template = <em>^ca_objects.caption</em>,
					image = ^ca_object_representations.media.small,
					icon = ^ca_object_representations.media.icon
				}
			},
			timeline = {
				data = ca_objects.indexingDatesSet,
				display = {
					title_template = <l>^ca_objects.preferred_labels.name</l>,
					description_template = <p>^ca_objects.description</p>,
					image = ^ca_object_representations.media.small,
					icon = ^ca_object_representations.media.icon
				}
			}
		},
		sortBy = {
			Identifier = ca_objects.idno,
			Title = ca_object_labels.name,
			Date = ca_objects.indexingDatesSet,
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Identifier = asc,
			Title = asc,
			Date = asc,
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown
	},
	collections = {
		displayName = _(Collections),
		labelSingular = _("collection"),
 		labelPlural = _("collections"),
		table = ca_collections,
		restrictToTypes = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = { 
			images = {}, 
			list = {}
		},
		
		sortBy = {
			Relevance = _natural,
			Identifier = ca_collections.idno,
			Name = ca_collection_labels.name
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown
	},
	entities = {
		displayName = _(People/Orgs),
		labelSingular = _("person"),
 		labelPlural = _("people"),
		table = ca_entities,
		restrictToTypes = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {}, 
			list = {}
		},
		
		sortBy = {
			Relevance = _natural,
			Identifier = ca_entities.idno,
			Name = ca_entity_labels.surname;ca_entity_labels.forename
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown
	},
	occurrences = {
		displayName = _(Works),
		labelSingular = _("work"),
 		labelPlural = _("works"),
		table = ca_occurrences,
		restrictToTypes = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			list = {}
		},
		
		sortBy = {
			Relevance = _natural,
			Identifier = ca_occurrences.idno,
			Name = ca_occurrence_labels.name
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown
	}
}

ca_objects = {
	name = _("Objects"),
	facets = {
		has_media_facet = {
			type = has,
			
			table = ca_object_representations,
			relationship_table = ca_objects_x_object_representations,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			facet_groups = [museum],
			
			label_yes = _("Has media"),
			label_no = _("Does not have media"),
			
			single_value = 1,
			
			label_singular = _("Digital Museum"),
			label_plural = _("Digital Museum"),
			description = _("Find objects that have associated media."),
		},	
		resource_type_facet = {
			type = attribute,
			element_code = resource_type,
			facet_groups = [museum],
			
			group_mode = none,

			label_singular = _("Resource Type"),
			label_plural = _("Resource Types"),
			description = _("Find objects according to the Types defined in your collection profile."),
		},
		object_type_facet = {
			type = attribute,
			element_code = cdwa_work_type,
			facet_groups = [museum],
			
			group_mode = none,

			label_singular = _("Object Type"),
			label_plural = _("Object Types"),
			description = _("Find objects according to the Types defined in your collection profile."),
		},	
		classification_facet = {
			type = attribute,
			element_code = classification,
			facet_groups = [museum],
			
			group_mode = none,

			label_singular = _("Classification"),
			label_plural = _("Classifications"),
			description = _("Find objects according to the Types defined in your collection profile."),
		},
		materials_facet = {
			type = attribute,
			element_code = cdwa_displayMaterialsTech,
			facet_groups = [museum],
			
			group_mode = none,

			label_singular = _("Material"),
			label_plural = _("Materials"),
			description = _("Find objects according to the Types defined in your collection profile."),
		},	
		decade_facet = {
			type = normalizedDates,
			element_code = displayDate,
			normalization = decades,
			facet_groups = [museum],
			
			group_mode = none,
			
			label_singular = _("Creation Date"),
			label_plural = _("Creation Dates"),
			description = _("Find objects according to associated dates.  You can normalize these dates by year&#44; decade or century."),
		},
		place_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_places,
			relationship_table = ca_objects_x_places,
			restrict_to_types = [],
			facet_groups = [museum],
			
			individual_group_display = 1,
			
			group_mode = hierarchical,
			order_by_label_fields = [name],
			
			# Set to non-zero value to display hierarchy on items in this facet
			show_hierarchy = 1,
			
			# Character(s) to place between elements of the hierarchy
			hierarchical_delimiter = &nbsp;⬅&nbsp;,
			
			# Number of items to trim off the top (leave blank or set to 0 to trim nothing)
			remove_first_items = 0,
			
			# Maximum length of hierarchy to display (leave blank to return hierarchy unabridged)
			hierarchy_limit = 3,
			
			# can be ASC or DESC (default is DESC)
			hierarchy_order  = DESC,
			
			indefinite_article = a,
			label_singular = _("place"),
			label_plural = _("places"),
			description = _("Find objects according to the place relationships in your collection.  You can choose to view the available places as a list or heirarchy of place names.")
		},
		term_facet = {
			type = authority,
			table = ca_list_items,
			relationship_table = ca_objects_x_vocabulary_terms,
			restrict_to_types = [],
			facet_groups = [museum],
			
			individual_group_display = 0,
			
			group_mode = hierarchical,
			
			# Set to non-zero value to display hierarchy on items in this facet
			show_hierarchy = 1,
			
			# Character(s) to place between elements of the hierarchy
			hierarchical_delimiter =  &nbsp;⬅&nbsp;,
			
			# Number of items to trim off the top (leave blank or set to 0 to trim nothing)
			remove_first_items = ,
			
			# Maximum length of hierarchy to display (leave blank to return hierarchy unabridged)
			hierarchy_limit = 3,
			
			# can be ASC or DESC (default is DESC)
			hierarchy_order  = DESC,
			
			label_singular = _("term"),
			label_plural = _("terms"),
			description = _("Browse keywords and vocabulary terms you have associated with your records.  You can displays your keywords as a list or hierarchy of terms.")
		},	
		language_facet = {
			type = attribute,
			element_code = language,
			facet_groups = [museum],
			
			group_mode = none,

			label_singular = _("Language"),
			label_plural = _("Languages"),
			description = _("Find objects according to the Types defined in your collection profile."),
		},													
		type_facet = {
			type = fieldList,
			field = type_id,
			
			group_mode = none,

			label_singular = _("Resource Type"),
			label_plural = _("Resource Types"),
			description = _("Find objects according to the Types defined in your collection profile."),
		},	
		entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_objects_x_entities,
			restrict_to_types = [],
			
			individual_group_display = 1,
			
			groupings = {
				label = _("Name"), 
				relationship_types = _("Role"),
				type = _("Type")
			},
			group_mode = alphabetical,
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _("person"),
			label_plural = _("people"),
			description = _("Find objects according to the people associated with your records.  You can browse by name&#44; role&#44; or entity type according to your configuration."),
		},



		decade_facet = {
			type = normalizedDates,
			element_code = creation_date,
			normalization = decades,
			
			group_mode = none,
			
			label_singular = _("decade"),
			label_plural = _("decades"),
			description = _("Find objects according to associated dates.  You can normalize these dates by year&#44; decade or century."),			
		},
		year_facet = {
			type = normalizedDates,
			element_code = creation_date,
			normalization = years,
			
			group_mode = none,
			
			label_singular = _("year"),
			label_plural = _("years"),
			description = _("Find objects according to associated dates.  You can normalize these dates by year&#44; decade or century."),			
		},
		occurrence_facet = {
			type = authority,
			table = ca_occurrences,
			generate_facets_for_types = 1,
			relationship_table = ca_objects_x_occurrences,
			restrict_to_types = [],
			
			individual_group_display = 1,
			
			show_all_when_first_facet = 0,
			
			groupings = {
				label = _("Name"), 
				ca_attribute_dates_value:years = _("Years")
			},
			
			group_mode = alphabetical,
			
			label_singular = _("occurrence"),
			label_plural = _("occurrences"),
			description = _("Find objects by Occurrences associated with your records&#44; such as historical events&#44; productions&#44; and other record types in your collection."),
		},
		collection_facet = {
			type = authority,
			table = ca_collections,
			relationship_table = ca_objects_x_collections,
			restrict_to_types = [],
			
			group_mode = none,

			label_singular = _("collection"),
			label_plural = _("collections"),
			description = _("Find objects according to the Collections they belong to."),
		},

	}
}


views = {
	images = {
		icon = glyphicon-th
	},
	list = {
		icon = glyphicon-list
	},
	timeline = {
		icon = glyphicon-time
	},
	map = {
		icon = glyphicon-globe
	}
}

# --- text for Browse menu item, default is "Browse" 
browse_menu_button_text = 

# --- default number of results per page/ajax load
defaultHitsPerBlock = 36

# --- set to list to show dropdown with links to each configured browse or a single Browse nav link when one browse is configured
browseMenuFormat =

# --- set if you don't want the browse menu to be preloaded with facets for the first browse type on open
dontPreloadBrowseMenu = 1

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-8 col-md-8 col-lg-8
result_col_class =

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-4 col-md-3 col-md-offset-1 col-lg-3 col-lg-offset-1
refine_col_class =