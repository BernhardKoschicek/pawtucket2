cache_timeout = 0

#
# 
#
browseTypes = {
	archive = {
		displayName = _(Archive),
		labelSingular = _("item"),
 		labelPlural = _("items"),
		table = ca_objects,
		
		restrictToTypes = [archival_item],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		facetGroup = archive,
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {},
		},
		sortBy = {
			Identifier = ca_objects.idno,
			date = ca_objects.date.date_parsed
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Identifier = asc,
			Title = desc
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown,
#		options = {
#			selectMediaUsingRelationshipTypes = [relationshipType],
#			selectMediaUsingTypes = [objectType],
#			extendedInformationTemplate = ^ca_objects.description
#		}
	},
	cr = {
		displayName = _(CR),
		labelSingular = _("item"),
 		labelPlural = _("items"),
		table = ca_objects,
		
		restrictToTypes = [artwork,cast,chronology_image,edition,element,group,reproduction,study,version],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		facetGroup = cr,
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {},
		},
		sortBy = {
			Identifier = ca_objects.idno,
			date = ca_objects.date.date_parsed
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Identifier = asc,
			Title = desc
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown,
#		options = {
#			selectMediaUsingRelationshipTypes = [relationshipType],
#			selectMediaUsingTypes = [objectType],
#			extendedInformationTemplate = ^ca_objects.description
#		}
	},
	occurrences = {
		displayName = _(Works),
		labelSingular = _("work"),
 		labelPlural = _("works"),
		table = ca_occurrences,
		restrictToTypes = [],
		showLetterBarFrom = ca_occurrence_labels.name,
		showLetterBarSorts = [ca_occurrence_labels.name],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			list = {}
		},
		
		sortBy = {
			Relevance = _natural,
			Identifier = ca_occurrences.idno,
			Name = ca_occurrence_labels.name
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown,
#		options = {
#			selectMediaUsingRelationshipTypes = [relationshipType],
#			selectMediaUsingTypes = [objectType]
#		}
	}
}

views = {
	images = {
		icon = glyphicon-th
	},
	list = {
		icon = glyphicon-list
	},
	timeline = {
		icon = glyphicon-time
	},
	map = {
		icon = glyphicon-globe
	}
}

# --- text for Browse menu item, default is "Browse" 
browse_menu_button_text = 

# --- default number of results per page/ajax load
defaultHitsPerBlock = 36

# --- set to list to show dropdown with links to each configured browse or a single Browse nav link when one browse is configured
browseMenuFormat =

# --- set if you don't want the browse menu to be preloaded with facets for the first browse type on open
dontPreloadBrowseMenu = 1

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-8 col-md-8 col-lg-8
result_col_class =

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-4 col-md-3 col-md-offset-1 col-lg-3 col-lg-offset-1
refine_col_class =



ca_objects = {
	name = _("Objects"),
	facets = {
		type_facet = {
			type = fieldList,
			field = type_id,
			facet_groups = [archive],
			
			group_mode = none,

			label_singular = _("type"),
			label_plural = _("types")
		},	
		decade_facet = {
			type = normalizedDates,
			element_code = parsed_date,
			normalization = decades,
			facet_groups = [archive,cr],
			
			group_mode = none,
			
			label_singular = _("decade"),
			label_plural = _("decades")		
		},
		collection_facet = {
			type = authority,
			table = ca_collections,
			relationship_table = ca_objects_x_collections,
			restrict_to_types = ["series"],
			facet_groups = [archive],
			requires = x,
			
			group_mode = none,
			show_description_when_first_facet = scopecontent,

			label_singular = _("collection"),
			label_plural = _("collections"),
		},
		classification_facet = {
			type = attribute,
			element_code = classification,
			facet_groups = [cr],

			label_singular = _("Object/Record type"),
			label_plural = _("Object/Record types")
		},
		material_facet = {
			type = attribute,
			element_code = material,
			facet_groups = [cr],

			label_singular = _("material"),
			label_plural = _("materials")
		}
	}
}