cache_timeout = 0

#
# 
#
browseTypes = {
	objects = {
		displayName = _(Objects),
		labelSingular = _("object"),
 		labelPlural = _("objects"),
		table = ca_objects,
		
		restrictToTypes = [],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		
		itemsPerPage = 18,
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {},
			list = {},
			map = {
				data = ca_objects.georeference,
				width = 100%,
				height = 600px,
				minZoomLevel = 2,
				maxZoomLevel = 18,
				display = {
					labelTemplate = <l>^ca_objects.preferred_labels.name</l> (^ca_objects.idno),
					contentTemplate = <div style='float:left; margin:0px 10px 10px 0px;'>^ca_object_representations.media.icon</div><p>^ca_objects.description</p>
				}
			},
			timeline = {
				data = ca_objects.creation_date,
				display = {
					title_template = <l>^ca_objects.preferred_labels.name</l> (^ca_objects.idno),
					description_template = <p>^ca_objects.description</p>,
					credit_template = ^ca_objects.rightsStatement.rightsStatement_text,
					caption_template = <em>^ca_objects.caption</em>,
					image = ^ca_object_representations.media.small,
					icon = ^ca_object_representations.media.icon
				}
			}
		},
		sortBy = {
			Identifier = ca_objects.idno,
			Title = ca_object_labels.name
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Identifier = asc,
			Title = desc
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown,
#		options = {
#			selectMediaUsingRelationshipTypes = [relationshipType],
#			selectMediaUsingTypes = [objectType],
#			extendedInformationTemplate = ^ca_objects.description
#		}
	},
	collections = {
		displayName = _(Collections),
		labelSingular = _("collection"),
 		labelPlural = _("collections"),
		table = ca_collections,
		restrictToTypes = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = { 
			images = {}, 
			list = {}
		},
		
		sortBy = {
			Relevance = _natural,
			Identifier = ca_collections.idno,
			Name = ca_collection_labels.name
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown
	},
	entities = {
		displayName = _(People/Orgs),
		labelSingular = _("person"),
 		labelPlural = _("people"),
		table = ca_entities,
		restrictToTypes = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {}, 
			list = {}
		},
		
		sortBy = {
			Name = ca_entity_labels.surname
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown
	},
	occurrences = {
		displayName = _(Works),
		labelSingular = _("work"),
 		labelPlural = _("works"),
		table = ca_occurrences,
		restrictToTypes = [],
		
		itemsPerPage = 10,
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			list = {}
		},
		
		sortBy = {
			Name = ca_occurrences.dates.dates_value
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown
	}
}

views = {
	images = {
		icon = glyphicon-th
	},
	list = {
		icon = glyphicon-list
	},
	timeline = {
		icon = glyphicon-time
	},
	map = {
		icon = glyphicon-globe
	}
}

# --- text for Browse menu item, default is "Browse" 
browse_menu_button_text = 

# --- default number of results per page/ajax load
defaultHitsPerBlock = 36

# --- set to list to show dropdown with links to each configured browse or a single Browse nav link when one browse is configured
browseMenuFormat =

# --- set if you don't want the browse menu to be preloaded with facets for the first browse type on open
dontPreloadBrowseMenu = 1

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-8 col-md-8 col-lg-8
result_col_class =

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-4 col-md-3 col-md-offset-1 col-lg-3 col-lg-offset-1
refine_col_class =



ca_occurrences = {
	name = _("Exhibitions"),
	facets = {
	    exhibition = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = label,		
			restrict_to_types = [exhibitions],
			
			individual_group_display = 1,
			
			browse_by_first_letter = 1,
			
			groupings = {},
			group_mode = alphabetical,
			order_by_label_fields = [name],
			
			indefinite_article = an,
			label_singular = _("exhibition"),
			label_plural = _("exhibitions"),
			description = _("List of exhibitions"),
		},
		decade = {
			type = normalizedDates,
			element_code = dates.dates_value,
			normalization = decades,
			
			group_mode = none,
			
			minimum_date = 1900,
			
			label_singular = _("decade"),
			label_plural = _("decades"),
			description = _("Exhibitions by decade"),			
		}
	}
}

ca_entities = {
	name = _("Exhibitors"),
	facets = {
        exhibitor = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = label,		
			
			individual_group_display = 1,
			
			browse_by_first_letter = 1,
			
			relationship = ca_entities_x_occurrences,
			restrict_to_relationship_types = [exhibitor, curator],
			
			groupings = {},
			group_mode = alphabetical,
			order_by_label_fields = [surname],
			
			indefinite_article = an,
			label_singular = _("exhibitor"),
			label_plural = _("exhibitors"),
			description = _("List of exhibitors"),
		},
    }
}
